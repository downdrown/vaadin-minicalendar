name: Build and Release

on:
  release:
    types: [published]

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.OS }}-mvn-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.OS }}-mvn-cache-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Prepare Environment
        run: chmod +x mvnw

      - name: Set Release Version
        run: |
          ./mvnw versions:set -DnewVersion="${{ github.ref_name }}"
          ./mvnw versions:commit

      - name: Build Add-on & Showcase
        run: |
          ./mvnw -Pdirectory -pl :addon install
          ./mvnw -Pproduction -pl :showcase install

      - name: Deploy Add-on to GitHub releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: addon/target/minicalendar-${{ github.ref_name }}.zip
          asset_name: minicalendar-${{ github.ref_name }}.zip
          asset_content_type: application/zip
          upload_url: ${{ github.event.release.upload_url }}

      - name: Deploy Showcase to GitHub releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: showcase/target/minicalendar-showcase-${{ github.ref_name }}.war
          asset_name: minicalendar-showcase-${{ github.ref_name }}.war
          asset_content_type: application/java-archive
          upload_url: ${{ github.event.release.upload_url }}
