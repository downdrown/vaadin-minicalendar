name: Deploy to Railway

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ Release ]
    types:
      - completed

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Log Verbose Data
        run : |
          echo ${{ toJson(github.event) }} \
          echo ${{ toJson(github) }}

      - name: Log Ref Data
        run: echo "Deploying to Railway.app using image tag ${{ github.event.release.tag_name }}"

      - name: Railway - Set IMAGE_TAG Environment Variable
        run: |
          curl \
          --location '${{ vars.RAILWAY_API_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.RAILWAY_API_TOKEN }}' \
          --data '{ \
            "query": "mutation { \
              variableUpsert( \
                input: { \
                  name: \"IMAGE_TAG\", \
                  value: \"${{ github.event.release.tag_name }}\", \
                  projectId: \"${{ secrets.RAILWAY_PROJECT_ID }}\", \
                  environmentId: \"${{ secrets.RAILWAY_ENVIRONMENT_ID }}\" \
                } \
              ) \
            }" \
          }'

      - name: Railway - Configure IMAGE_TAG Environment Variable Share
        run: |
          curl \
          --location '${{ vars.RAILWAY_API_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.RAILWAY_API_TOKEN }}' \
          --data '{ \
            "query":"mutation { \
              sharedVariableConfigure( \
                input: { \
                  name: \"IMAGE_TAG\", \
                  projectId: \"${{ secrets.RAILWAY_PROJECT_ID }}\", \
                  environmentId: \"${{ secrets.RAILWAY_ENVIRONMENT_ID }}\", \
                  enabledServiceIds: [\"${{ secrets.RAILWAY_SERVICE_ID }}\"], \
                  disabledServiceIds: [\"\"] \
                } \
              ) { \
                name \
            }" \
          }'

      - name: Railway - Set RAILWAY_DOCKERFILE_PATH Environment Variable
        run: |
          curl \
          --location '${{ vars.RAILWAY_API_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.RAILWAY_API_TOKEN }}' \
          --data '{ \
            "query": "mutation { \
              variableUpsert( \
                input: { \
                  name: \"RAILWAY_DOCKERFILE_PATH\", \
                  value: \"showcase/Dockerfile.Railway\", \
                  projectId: \"${{ secrets.RAILWAY_PROJECT_ID }}\", \
                  environmentId: \"${{ secrets.RAILWAY_ENVIRONMENT_ID }}\" \
                } \
              ) \
            }" \
          }'

      - name: Railway - Configure RAILWAY_DOCKERFILE_PATH Environment Variable Share
        run: |
          curl \
          --location '${{ vars.RAILWAY_API_URL }}' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.RAILWAY_API_TOKEN }}' \
          --data '{ \
            "query":"mutation { \
              sharedVariableConfigure( \
                input: { \
                  name: \"RAILWAY_DOCKERFILE_PATH\", \
                  projectId: \"${{ secrets.RAILWAY_PROJECT_ID }}\", \
                  environmentId: \"${{ secrets.RAILWAY_ENVIRONMENT_ID }}\", \
                  enabledServiceIds: [\"${{ secrets.RAILWAY_SERVICE_ID }}\"], \
                  disabledServiceIds: [\"\"] \
                } \
              ) { \
                name \
            }" \
          }'

      - name: Install Railway CLI
        run: curl -fsSL https://railway.app/install.sh | sh

      - name: Railway - Deploy
        run: railway up

        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
